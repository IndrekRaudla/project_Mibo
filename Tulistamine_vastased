import pygame
import random
import math

FPS = 120
wind_laius = 600
wind_kõrgus = 800
padding = 10
scoreboard_kõrgus = 100

kiirus = 5
x = padding
y = wind_kõrgus-padding-scoreboard_kõrgus
score = 0
# Värvid
WHITE = (255, 255, 255)
BLACK = (0, 0, 0)
RED = (255, 0, 0)
GREEN = (0, 255, 0)
BLUE = (0, 0, 255)
background = (31, 31, 31)



# Aken
pygame.init()
window = pygame.display.set_mode((wind_laius,wind_kõrgus))
pygame.display.set_caption("Rip off Space Invaders")
aeg = pygame.time.Clock()

# Pilt
# Ajutiselt debugi jaoks välja kommenteeritud
# See tuleb ka alati kaasa panna githubi vms!
laev = pygame.image.load("playerShip1_green.png").convert()
laius = laev.get_width()
kõrgus = laev.get_height()
x = padding
y = wind_kõrgus-2*padding-scoreboard_kõrgus - kõrgus

#Meteoriidid nendega on see jama, et ma pole piire pannud, et kui läheb window piiridest välja ss peaks uuesti ülevalt alla tulema
meteoriit_image = []
meteoriitX = []
meteoriitY = []
meteoriitY_change = []
meteoriitide_arv = 4
for i in range(meteoriitide_arv):
    meteoriit_image.append(pygame.image.load("asteroid.png").convert())
    meteoriitX.append (random.randint(0,530))
    meteoriitY.append (random.randint(9,9))
    meteoriitY_change.append (40)

def meteoriit(x,y,i):
    window.blit(meteoriit_image[i],(x,y))
#Laskmine
laser_image = pygame.image.load("laserBlue03.png").convert()
laserX = 0
laserY = y
laserY_change = 5
laser_state = "ready"

def laskmine(x,y):
    global laser_state
    laser_state = "fire"
    window.blit(laser_image,(x+16,y+10))

#Mängja 
def redraw():  
    pygame.draw.rect(window, background, (padding/2, padding/2, wind_laius-padding , wind_kõrgus-padding))
    pygame.draw.rect(window, BLUE, (padding,wind_kõrgus-padding-scoreboard_kõrgus, wind_laius-2*padding,scoreboard_kõrgus))
    window.blit(laev,(x,y)) # Ajutine
    
#Collision
def collision(meteoriitX,meteoriitY,laserX,laserY):
    vahemaa = math.sqrt((math.pow(meteoriitX-laserX,2))+(math.pow(meteoriitY-laserY,2)))
    if vahemaa < 27:
        return True
    else:
        return False

    
# Main loop
run = True
while run:
    aeg.tick(FPS)
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            run = False
    
    nupud = pygame.key.get_pressed()
    if nupud[pygame.K_LEFT] and x >= kiirus + padding: # Fixed 
        x -= kiirus
    if nupud[pygame.K_RIGHT] and x < wind_laius - laius - padding: # Fixed
        x += kiirus
    if nupud[pygame.K_SPACE]:
        if laser_state is "ready":
            laserX = x
            laskmine(x,laserY)
    window.fill(RED)
    #pygame.display.flip()?
    redraw()
    
    
    #Meteoriidi langemine (Probleem on selles, et langeb sinise kasti pealt läbi)
    for i in range(meteoriitide_arv):
        meteoriitY [i]+= meteoriitY_change [i]
        if meteoriitY [i] > 0:
            meteoriitY_change[i] = 1
        kokkupõrge = collision(meteoriitX[i],meteoriitY[i],laserX,laserY)
        if kokkupõrge:
            laserY = y
            laser_state = "ready"
            #score += 1
            meteoriitX[i] = random.randint(0,560)
            meteoriitY[i] = random.randint(9,9)
        meteoriit(meteoriitX[i],meteoriitY[i], i)
    #Laseri liikumine (Probleem, laser väljub tiivast ning uue laser saab alles, ss lasta kui eelmine on ekraanilt lahkunud)
    if laserY <= 0 :
        laserY = y
        laser_state = "ready"
    if laser_state is "fire":
        laskmine(laserX,laserY)
        laserY -= laserY_change
    

        
    pygame.display.update()

pygame.quit()
